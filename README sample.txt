# Pedro - Short Squeeze Predictor

## Description

This project aims to predict potential short squeezes in the stock market by analyzing data related to short float percentages and insider trading activity. The predictions generated by our model can guide traders and investors to make more informed decisions. 

## Getting Started

### Prerequisites

This project uses the following Python libraries:
- pandas
- numpy
- scikit-learn
- joblib
- xgboost
- tensorflow
- alpaca_trade_api
- dotenv

You can install these using pip:
```bash
pip install pandas numpy scikit-learn joblib xgboost tensorflow alpaca_trade_api python-dotenv
```

### Installation

Clone the repo:
```bash
git clone https://github.com/<username>/short-squeeze-predictor.git
```

Navigate to the project directory:
```bash
cd short-squeeze-predictor
```

### Usage

To use this project, first load the environment variables from the `.env` file:

```python
from dotenv import load_dotenv
load_dotenv(dotenv_path="Alpaca.env")
```

Next, create the Alpaca API:

```python
api = create_alpaca_api()
```

Then, load the trained models:

```python
models = load_models(model_names)
```

## Project Structure

The project consists of three main parts:

1. **Data collection and preprocessing**: We gather historical stock data and insider trading information, clean the data, and preprocess it for machine learning.

2. **Model training and evaluation**: We use various machine learning models, including Decision Trees, Random Forests, Gradient Boosting, XGBoost, and Neural Networks. We then evaluate the models using accuracy, precision, and recall metrics.

3. **Integration with Alpaca API**: We integrate the trained models with the Alpaca API to perform simulated trading based on the predicted short squeeze opportunities.

## Findings

Our findings indicate that machine learning models can successfully predict short squeeze events to a certain extent. However, the accuracy varies among different models, suggesting the need for hybrid models or advanced algorithms for more accurate predictions.

## Future Work

We plan to improve our model's accuracy by further tuning the hyperparameters and exploring hybrid models. We also intend to deploy the model as a web service, making it accessible to traders and investors in real time.

## Contributing

If you wish to contribute to this project, please fork the repository and submit a pull request.

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.